name: hr-talent-admin-api
on: push
jobs:
  deploy:
    name: 'Deploy hr-talent-admin-api'
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/develop'
    env:
      PROFILE_ACTIVE: prod
      GCP_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
      APP_NAME: ${{ secrets.GCP_APP_NAME }}
      REGION: ${{ secrets.GCP_REGION }}
      ACCOUNT: ${{ secrets.ACCOUNT }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REPOSITORY: ${{ secrets.GCP_APP_NAME }}
      IMAGE: ${{ secrets.GCP_APP_NAME }}
      INSTANCE_ZONE: ${{ secrets.INSTANCE_ZONE}}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - id: 'Auth'
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v0
      - name: 'Docker auth configuration'
        run: gcloud auth configure-docker
      - name: 'Build image'
        env:
          IMAGE_URL: '${{ env.ACCOUNT }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest'
        run: docker build --tag $IMAGE_URL .
      - name: 'Docker push image'
        env:
          REPOSITRORY: ${{ env.REGION }}-docker.pkg.dev
          IMAGE_URL: '${{ env.ACCOUNT }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest'
        run: |-
          gcloud auth configure-docker $REPOSITRORY
          docker push "$IMAGE_URL"
      - name: 'Deploy project'
        run: |-
          gcloud compute instances update-container $APP_NAME \
          --zone $INSTANCE_ZONE \
          --container-image $PROJECT_ID \
          --container-env POSTGRES_HOST="$POSTGRES_HOST" \
          --container-env POSTGRES_PORT="$POSTGRES_PORT" \
          --container-env POSTGRES_USER="$POSTGRES_USER" \
          --container-env POSTGRES_DB="$POSTGRES_DB" \
          --container-env POSTGRES_PASSWORD="$POSTGRES_PASSWORD"