name: hr-talent-admin-api
on: push
jobs:
  deploy:
    name: 'Deploy hr-talent-admin-api'
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/develop'
    env:
      #IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
      IMAGE_NAME: ${{ secrets.IMAGE }}
      PROFILE_ACTIVE: prod
      APP_NAME: ${{ secrets.GCP_APP_NAME }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      INSTANCE_ZONE: ${{ secrets.INSTANCE_ZONE}}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      ACCOUNT: ${{ secrets.ACCOUNT }}
      GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'
      - name: 'Auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGION}}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
#      - name: 'Authorize Docker push'
 #       run: |
  #        gcloud config set artifacts/repository $APP_NAME \
   #       gcloud config set artifacts/location us-central1 \
    #      gcloud config set account $ACCOUNT \
     #     gcloud auth activate-service-account $ACCOUNT --key-file=$GOOGLE_APPLICATION_CREDENTIALS --project=$GCP_PROJECT_ID
      #- name: 'Auth Artifact'
      #- name: 'Authorize Docker push'
      #  run: 'gcloud auth configure-docker --quiet'
      - name: 'Build Docker image'
        run: 'docker build . -t $IMAGE_NAME'
      - name: 'Test Docker image'
        run: 'docker run -d -p 80:80 $IMAGE_NAME'
      - name: 'Push Docker image'
        run: 'docker push $IMAGE_NAME'
      - name: 'Deploy'
        run: |
          gcloud compute instances update-container $APP_NAME \
          --zone $INSTANCE_ZONE \
          --container-image $IMAGE_NAME \
          --container-env POSTGRES_HOST="$POSTGRES_HOST" \
          --container-env POSTGRES_PORT="$POSTGRES_PORT" \
          --container-env POSTGRES_USER="$POSTGRES_USER" \
          --container-env POSTGRES_DB="$POSTGRES_DB" \
          --container-env POSTGRES_PASSWORD="$POSTGRES_PASSWORD"
      - name: 'remove key'
        run: 'rm -rf ./secret.json'