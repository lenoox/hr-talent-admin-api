name: hr-talent-admin-api
on: push
jobs:
  deploy:
    name: 'Deploy hr-talent-admin-api'
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/develop'
    env:
      #IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
      IMAGE_NAME: us-central1-docker.pkg.dev/$GCP_PROJECT_ID/$APP_NAME
      PROFILE_ACTIVE: prod
      GAR_LOCATION: us-east1
      APP_NAME: ${{ secrets.GCP_APP_NAME }}
      REPOSITORY: ${{ secrets.GCP_APP_NAME }}
      IMAGE: ${{ secrets.GCP_APP_NAME }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      INSTANCE_ZONE: ${{ secrets.INSTANCE_ZONE}}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      ACCOUNT: ${{ secrets.ACCOUNT }}

      GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Configure Workload Identity Federation and generate an access token.
      # - id: 'auth'
      #   name: 'Authenticate to Google Cloud'
      #   uses: 'google-github-actions/auth@v0'
      #   with:
      #     token_format: 'access_token'
      #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
      #     service_account: 'my-service-account@my-project.iam.gserviceaccount.com'
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Docker configuration
        run: 'gcloud auth configure-docker'
      - name: Build
        run: docker build --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" .
      - name: Publish
        run: |-
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest"
#      - uses: 'actions/checkout@v3'
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#      - id: 'auth'
#        name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          token_format: 'access_token'
#      - uses: 'docker/login-action@v1'
#        with:
#          registry: 'us-central1-docker.pkg.dev' # or REGION-docker.pkg.dev
#          username: 'oauth2accesstoken'
#          password: '${{ steps.auth.outputs.access_token }}'
#      - name: Configure Docker Client
#        run: docker login -u oauth2accesstoken --password-stdin https://REGION-docker.pkg.dev
#      - id: 'auth'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#      - name: Check out code
#        uses: actions/checkout@v2
#      - name: 'Build Docker image'
#        run: 'docker build . -t us-central1-docker.pkg.dev/hr-project-app/hr-talent-admin-api'
#      - name: Configure Docker Client
#        run: |-
#          gcloud auth configure-docker --quiet
#          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
#      - name: 'Push Docker image'
#        run:  'docker push us-central1-docker.pkg.dev/hr-project-app/hr-talent-admin-api'
#      - name: 'Deploy'
#        run: |-
#          gcloud compute instances update-container $APP_NAME \
#          --zone $INSTANCE_ZONE \
#          --container-image $GCP_PROJECT_ID \
#          --container-env POSTGRES_HOST="$POSTGRES_HOST" \
#          --container-env POSTGRES_PORT="$POSTGRES_PORT" \
#          --container-env POSTGRES_USER="$POSTGRES_USER" \
#          --container-env POSTGRES_DB="$POSTGRES_DB" \
#          --container-env POSTGRES_PASSWORD="$POSTGRES_PASSWORD"
          

